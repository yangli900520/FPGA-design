// -------------------------------------------------------------
// 
// File Name: /home/yangli18/Documents/yangzai/PFC/qr_simulink/HDL/qr10/fourxfour_designfxdpt_givens/Sqrt.v
// Created: 2019-10-01 15:17:02
// 
// Generated by MATLAB 9.5 and HDL Coder 3.13
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: Sqrt
// Source Path: fourxfour_designfxdpt_givens/fourxfour_designfxdpt/Givens_Boundary_Cell2/Sqrt
// Hierarchy Level: 2
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module Sqrt_block
          (din,
           dout);


  input   [48:0] din;  // ufix49_En28
  output  [48:0] dout;  // ufix49_En28


  wire [97:0] base38sqr;  // ufix98_En56
  wire [97:0] resizedin;  // ufix98_En56
  wire relop_relop1;
  wire [97:0] rootsqini;  // ufix98_En56
  wire [97:0] root_sq38;  // ufix98_En56
  wire [97:0] base37sqr;  // ufix98_En56
  wire [48:0] rootini;  // ufix49_En28
  wire [48:0] MSBy;  // ufix49_En28
  wire [48:0] root38;  // ufix49_En28
  wire [98:0] adder_add_cast;  // ufix99_En56
  wire [98:0] adder_add_cast_1;  // ufix99_En56
  wire [98:0] adder_add_temp;  // ufix99_En56
  wire [97:0] squaresum38;  // ufix98_En56
  wire [97:0] rootdtc38;  // ufix98_En56
  wire [97:0] shift238;  // ufix98_En56
  wire [98:0] adder_add_cast_2;  // ufix99_En56
  wire [98:0] adder_add_cast_3;  // ufix99_En56
  wire [98:0] adder_add_temp_1;  // ufix99_En56
  wire [97:0] roottmp_sq37;  // ufix98_En56
  wire relop_relop1_1;
  wire [97:0] root_sq37;  // ufix98_En56
  wire [97:0] base36sqr;  // ufix98_En56
  wire [48:0] roottmp37;  // ufix49_En28
  wire [48:0] root37;  // ufix49_En28
  wire [98:0] adder_add_cast_4;  // ufix99_En56
  wire [98:0] adder_add_cast_5;  // ufix99_En56
  wire [98:0] adder_add_temp_2;  // ufix99_En56
  wire [97:0] squaresum37;  // ufix98_En56
  wire [97:0] rootdtc37;  // ufix98_En56
  wire [97:0] shift237;  // ufix98_En56
  wire [98:0] adder_add_cast_6;  // ufix99_En56
  wire [98:0] adder_add_cast_7;  // ufix99_En56
  wire [98:0] adder_add_temp_3;  // ufix99_En56
  wire [97:0] roottmp_sq36;  // ufix98_En56
  wire relop_relop1_2;
  wire [97:0] root_sq36;  // ufix98_En56
  wire [97:0] base35sqr;  // ufix98_En56
  wire [48:0] roottmp36;  // ufix49_En28
  wire [48:0] root36;  // ufix49_En28
  wire [98:0] adder_add_cast_8;  // ufix99_En56
  wire [98:0] adder_add_cast_9;  // ufix99_En56
  wire [98:0] adder_add_temp_4;  // ufix99_En56
  wire [97:0] squaresum36;  // ufix98_En56
  wire [97:0] rootdtc36;  // ufix98_En56
  wire [97:0] shift236;  // ufix98_En56
  wire [98:0] adder_add_cast_10;  // ufix99_En56
  wire [98:0] adder_add_cast_11;  // ufix99_En56
  wire [98:0] adder_add_temp_5;  // ufix99_En56
  wire [97:0] roottmp_sq35;  // ufix98_En56
  wire relop_relop1_3;
  wire [97:0] root_sq35;  // ufix98_En56
  wire [97:0] base34sqr;  // ufix98_En56
  wire [48:0] roottmp35;  // ufix49_En28
  wire [48:0] root35;  // ufix49_En28
  wire [98:0] adder_add_cast_12;  // ufix99_En56
  wire [98:0] adder_add_cast_13;  // ufix99_En56
  wire [98:0] adder_add_temp_6;  // ufix99_En56
  wire [97:0] squaresum35;  // ufix98_En56
  wire [97:0] rootdtc35;  // ufix98_En56
  wire [97:0] shift235;  // ufix98_En56
  wire [98:0] adder_add_cast_14;  // ufix99_En56
  wire [98:0] adder_add_cast_15;  // ufix99_En56
  wire [98:0] adder_add_temp_7;  // ufix99_En56
  wire [97:0] roottmp_sq34;  // ufix98_En56
  wire relop_relop1_4;
  wire [97:0] root_sq34;  // ufix98_En56
  wire [97:0] base33sqr;  // ufix98_En56
  wire [48:0] roottmp34;  // ufix49_En28
  wire [48:0] root34;  // ufix49_En28
  wire [98:0] adder_add_cast_16;  // ufix99_En56
  wire [98:0] adder_add_cast_17;  // ufix99_En56
  wire [98:0] adder_add_temp_8;  // ufix99_En56
  wire [97:0] squaresum34;  // ufix98_En56
  wire [97:0] rootdtc34;  // ufix98_En56
  wire [97:0] shift234;  // ufix98_En56
  wire [98:0] adder_add_cast_18;  // ufix99_En56
  wire [98:0] adder_add_cast_19;  // ufix99_En56
  wire [98:0] adder_add_temp_9;  // ufix99_En56
  wire [97:0] roottmp_sq33;  // ufix98_En56
  wire relop_relop1_5;
  wire [97:0] root_sq33;  // ufix98_En56
  wire [97:0] base32sqr;  // ufix98_En56
  wire [48:0] roottmp33;  // ufix49_En28
  wire [48:0] root33;  // ufix49_En28
  wire [98:0] adder_add_cast_20;  // ufix99_En56
  wire [98:0] adder_add_cast_21;  // ufix99_En56
  wire [98:0] adder_add_temp_10;  // ufix99_En56
  wire [97:0] squaresum33;  // ufix98_En56
  wire [97:0] rootdtc33;  // ufix98_En56
  wire [97:0] shift233;  // ufix98_En56
  wire [98:0] adder_add_cast_22;  // ufix99_En56
  wire [98:0] adder_add_cast_23;  // ufix99_En56
  wire [98:0] adder_add_temp_11;  // ufix99_En56
  wire [97:0] roottmp_sq32;  // ufix98_En56
  wire relop_relop1_6;
  wire [97:0] root_sq32;  // ufix98_En56
  wire [97:0] base31sqr;  // ufix98_En56
  wire [48:0] roottmp32;  // ufix49_En28
  wire [48:0] root32;  // ufix49_En28
  wire [98:0] adder_add_cast_24;  // ufix99_En56
  wire [98:0] adder_add_cast_25;  // ufix99_En56
  wire [98:0] adder_add_temp_12;  // ufix99_En56
  wire [97:0] squaresum32;  // ufix98_En56
  wire [97:0] rootdtc32;  // ufix98_En56
  wire [97:0] shift232;  // ufix98_En56
  wire [98:0] adder_add_cast_26;  // ufix99_En56
  wire [98:0] adder_add_cast_27;  // ufix99_En56
  wire [98:0] adder_add_temp_13;  // ufix99_En56
  wire [97:0] roottmp_sq31;  // ufix98_En56
  wire relop_relop1_7;
  wire [97:0] root_sq31;  // ufix98_En56
  wire [97:0] base30sqr;  // ufix98_En56
  wire [48:0] roottmp31;  // ufix49_En28
  wire [48:0] root31;  // ufix49_En28
  wire [98:0] adder_add_cast_28;  // ufix99_En56
  wire [98:0] adder_add_cast_29;  // ufix99_En56
  wire [98:0] adder_add_temp_14;  // ufix99_En56
  wire [97:0] squaresum31;  // ufix98_En56
  wire [97:0] rootdtc31;  // ufix98_En56
  wire [97:0] shift231;  // ufix98_En56
  wire [98:0] adder_add_cast_30;  // ufix99_En56
  wire [98:0] adder_add_cast_31;  // ufix99_En56
  wire [98:0] adder_add_temp_15;  // ufix99_En56
  wire [97:0] roottmp_sq30;  // ufix98_En56
  wire relop_relop1_8;
  wire [97:0] root_sq30;  // ufix98_En56
  wire [97:0] base29sqr;  // ufix98_En56
  wire [48:0] roottmp30;  // ufix49_En28
  wire [48:0] root30;  // ufix49_En28
  wire [98:0] adder_add_cast_32;  // ufix99_En56
  wire [98:0] adder_add_cast_33;  // ufix99_En56
  wire [98:0] adder_add_temp_16;  // ufix99_En56
  wire [97:0] squaresum30;  // ufix98_En56
  wire [97:0] rootdtc30;  // ufix98_En56
  wire [97:0] shift230;  // ufix98_En56
  wire [98:0] adder_add_cast_34;  // ufix99_En56
  wire [98:0] adder_add_cast_35;  // ufix99_En56
  wire [98:0] adder_add_temp_17;  // ufix99_En56
  wire [97:0] roottmp_sq29;  // ufix98_En56
  wire relop_relop1_9;
  wire [97:0] root_sq29;  // ufix98_En56
  wire [97:0] base28sqr;  // ufix98_En56
  wire [48:0] roottmp29;  // ufix49_En28
  wire [48:0] root29;  // ufix49_En28
  wire [98:0] adder_add_cast_36;  // ufix99_En56
  wire [98:0] adder_add_cast_37;  // ufix99_En56
  wire [98:0] adder_add_temp_18;  // ufix99_En56
  wire [97:0] squaresum29;  // ufix98_En56
  wire [97:0] rootdtc29;  // ufix98_En56
  wire [97:0] shift229;  // ufix98_En56
  wire [98:0] adder_add_cast_38;  // ufix99_En56
  wire [98:0] adder_add_cast_39;  // ufix99_En56
  wire [98:0] adder_add_temp_19;  // ufix99_En56
  wire [97:0] roottmp_sq28;  // ufix98_En56
  wire relop_relop1_10;
  wire [97:0] root_sq28;  // ufix98_En56
  wire [97:0] base27sqr;  // ufix98_En56
  wire [48:0] roottmp28;  // ufix49_En28
  wire [48:0] root28;  // ufix49_En28
  wire [98:0] adder_add_cast_40;  // ufix99_En56
  wire [98:0] adder_add_cast_41;  // ufix99_En56
  wire [98:0] adder_add_temp_20;  // ufix99_En56
  wire [97:0] squaresum28;  // ufix98_En56
  wire [97:0] rootdtc28;  // ufix98_En56
  wire [98:0] adder_add_cast_42;  // ufix99_En56
  wire [98:0] adder_add_cast_43;  // ufix99_En56
  wire [98:0] adder_add_temp_21;  // ufix99_En56
  wire [97:0] roottmp_sq27;  // ufix98_En56
  wire relop_relop1_11;
  wire [97:0] root_sq27;  // ufix98_En56
  wire [97:0] base26sqr;  // ufix98_En56
  wire [48:0] roottmp27;  // ufix49_En28
  wire [48:0] root27;  // ufix49_En28
  wire [98:0] adder_add_cast_44;  // ufix99_En56
  wire [98:0] adder_add_cast_45;  // ufix99_En56
  wire [98:0] adder_add_temp_22;  // ufix99_En56
  wire [97:0] squaresum27;  // ufix98_En56
  wire [97:0] rootdtc27;  // ufix98_En56
  wire [97:0] shift227;  // ufix98_En56
  wire [98:0] adder_add_cast_46;  // ufix99_En56
  wire [98:0] adder_add_cast_47;  // ufix99_En56
  wire [98:0] adder_add_temp_23;  // ufix99_En56
  wire [97:0] roottmp_sq26;  // ufix98_En56
  wire relop_relop1_12;
  wire [97:0] root_sq26;  // ufix98_En56
  wire [97:0] base25sqr;  // ufix98_En56
  wire [48:0] roottmp26;  // ufix49_En28
  wire [48:0] root26;  // ufix49_En28
  wire [98:0] adder_add_cast_48;  // ufix99_En56
  wire [98:0] adder_add_cast_49;  // ufix99_En56
  wire [98:0] adder_add_temp_24;  // ufix99_En56
  wire [97:0] squaresum26;  // ufix98_En56
  wire [97:0] rootdtc26;  // ufix98_En56
  wire [97:0] shift226;  // ufix98_En56
  wire [98:0] adder_add_cast_50;  // ufix99_En56
  wire [98:0] adder_add_cast_51;  // ufix99_En56
  wire [98:0] adder_add_temp_25;  // ufix99_En56
  wire [97:0] roottmp_sq25;  // ufix98_En56
  wire relop_relop1_13;
  wire [97:0] root_sq25;  // ufix98_En56
  wire [97:0] base24sqr;  // ufix98_En56
  wire [48:0] roottmp25;  // ufix49_En28
  wire [48:0] root25;  // ufix49_En28
  wire [98:0] adder_add_cast_52;  // ufix99_En56
  wire [98:0] adder_add_cast_53;  // ufix99_En56
  wire [98:0] adder_add_temp_26;  // ufix99_En56
  wire [97:0] squaresum25;  // ufix98_En56
  wire [97:0] rootdtc25;  // ufix98_En56
  wire [97:0] shift225;  // ufix98_En56
  wire [98:0] adder_add_cast_54;  // ufix99_En56
  wire [98:0] adder_add_cast_55;  // ufix99_En56
  wire [98:0] adder_add_temp_27;  // ufix99_En56
  wire [97:0] roottmp_sq24;  // ufix98_En56
  wire relop_relop1_14;
  wire [97:0] root_sq24;  // ufix98_En56
  wire [97:0] base23sqr;  // ufix98_En56
  wire [48:0] roottmp24;  // ufix49_En28
  wire [48:0] root24;  // ufix49_En28
  wire [98:0] adder_add_cast_56;  // ufix99_En56
  wire [98:0] adder_add_cast_57;  // ufix99_En56
  wire [98:0] adder_add_temp_28;  // ufix99_En56
  wire [97:0] squaresum24;  // ufix98_En56
  wire [97:0] rootdtc24;  // ufix98_En56
  wire [97:0] shift224;  // ufix98_En56
  wire [98:0] adder_add_cast_58;  // ufix99_En56
  wire [98:0] adder_add_cast_59;  // ufix99_En56
  wire [98:0] adder_add_temp_29;  // ufix99_En56
  wire [97:0] roottmp_sq23;  // ufix98_En56
  wire relop_relop1_15;
  wire [97:0] root_sq23;  // ufix98_En56
  wire [97:0] base22sqr;  // ufix98_En56
  wire [48:0] roottmp23;  // ufix49_En28
  wire [48:0] root23;  // ufix49_En28
  wire [98:0] adder_add_cast_60;  // ufix99_En56
  wire [98:0] adder_add_cast_61;  // ufix99_En56
  wire [98:0] adder_add_temp_30;  // ufix99_En56
  wire [97:0] squaresum23;  // ufix98_En56
  wire [97:0] rootdtc23;  // ufix98_En56
  wire [97:0] shift223;  // ufix98_En56
  wire [98:0] adder_add_cast_62;  // ufix99_En56
  wire [98:0] adder_add_cast_63;  // ufix99_En56
  wire [98:0] adder_add_temp_31;  // ufix99_En56
  wire [97:0] roottmp_sq22;  // ufix98_En56
  wire relop_relop1_16;
  wire [97:0] root_sq22;  // ufix98_En56
  wire [97:0] base21sqr;  // ufix98_En56
  wire [48:0] roottmp22;  // ufix49_En28
  wire [48:0] root22;  // ufix49_En28
  wire [98:0] adder_add_cast_64;  // ufix99_En56
  wire [98:0] adder_add_cast_65;  // ufix99_En56
  wire [98:0] adder_add_temp_32;  // ufix99_En56
  wire [97:0] squaresum22;  // ufix98_En56
  wire [97:0] rootdtc22;  // ufix98_En56
  wire [97:0] shift222;  // ufix98_En56
  wire [98:0] adder_add_cast_66;  // ufix99_En56
  wire [98:0] adder_add_cast_67;  // ufix99_En56
  wire [98:0] adder_add_temp_33;  // ufix99_En56
  wire [97:0] roottmp_sq21;  // ufix98_En56
  wire relop_relop1_17;
  wire [97:0] root_sq21;  // ufix98_En56
  wire [97:0] base20sqr;  // ufix98_En56
  wire [48:0] roottmp21;  // ufix49_En28
  wire [48:0] root21;  // ufix49_En28
  wire [98:0] adder_add_cast_68;  // ufix99_En56
  wire [98:0] adder_add_cast_69;  // ufix99_En56
  wire [98:0] adder_add_temp_34;  // ufix99_En56
  wire [97:0] squaresum21;  // ufix98_En56
  wire [97:0] rootdtc21;  // ufix98_En56
  wire [97:0] shift221;  // ufix98_En56
  wire [98:0] adder_add_cast_70;  // ufix99_En56
  wire [98:0] adder_add_cast_71;  // ufix99_En56
  wire [98:0] adder_add_temp_35;  // ufix99_En56
  wire [97:0] roottmp_sq20;  // ufix98_En56
  wire relop_relop1_18;
  wire [97:0] root_sq20;  // ufix98_En56
  wire [97:0] base19sqr;  // ufix98_En56
  wire [48:0] roottmp20;  // ufix49_En28
  wire [48:0] root20;  // ufix49_En28
  wire [98:0] adder_add_cast_72;  // ufix99_En56
  wire [98:0] adder_add_cast_73;  // ufix99_En56
  wire [98:0] adder_add_temp_36;  // ufix99_En56
  wire [97:0] squaresum20;  // ufix98_En56
  wire [97:0] rootdtc20;  // ufix98_En56
  wire [97:0] shift220;  // ufix98_En56
  wire [98:0] adder_add_cast_74;  // ufix99_En56
  wire [98:0] adder_add_cast_75;  // ufix99_En56
  wire [98:0] adder_add_temp_37;  // ufix99_En56
  wire [97:0] roottmp_sq19;  // ufix98_En56
  wire relop_relop1_19;
  wire [97:0] root_sq19;  // ufix98_En56
  wire [97:0] base18sqr;  // ufix98_En56
  wire [48:0] roottmp19;  // ufix49_En28
  wire [48:0] root19;  // ufix49_En28
  wire [98:0] adder_add_cast_76;  // ufix99_En56
  wire [98:0] adder_add_cast_77;  // ufix99_En56
  wire [98:0] adder_add_temp_38;  // ufix99_En56
  wire [97:0] squaresum19;  // ufix98_En56
  wire [97:0] rootdtc19;  // ufix98_En56
  wire [97:0] shift219;  // ufix98_En56
  wire [98:0] adder_add_cast_78;  // ufix99_En56
  wire [98:0] adder_add_cast_79;  // ufix99_En56
  wire [98:0] adder_add_temp_39;  // ufix99_En56
  wire [97:0] roottmp_sq18;  // ufix98_En56
  wire relop_relop1_20;
  wire [97:0] root_sq18;  // ufix98_En56
  wire [97:0] base17sqr;  // ufix98_En56
  wire [48:0] roottmp18;  // ufix49_En28
  wire [48:0] root18;  // ufix49_En28
  wire [98:0] adder_add_cast_80;  // ufix99_En56
  wire [98:0] adder_add_cast_81;  // ufix99_En56
  wire [98:0] adder_add_temp_40;  // ufix99_En56
  wire [97:0] squaresum18;  // ufix98_En56
  wire [97:0] rootdtc18;  // ufix98_En56
  wire [97:0] shift218;  // ufix98_En56
  wire [98:0] adder_add_cast_82;  // ufix99_En56
  wire [98:0] adder_add_cast_83;  // ufix99_En56
  wire [98:0] adder_add_temp_41;  // ufix99_En56
  wire [97:0] roottmp_sq17;  // ufix98_En56
  wire relop_relop1_21;
  wire [97:0] root_sq17;  // ufix98_En56
  wire [97:0] base16sqr;  // ufix98_En56
  wire [48:0] roottmp17;  // ufix49_En28
  wire [48:0] root17;  // ufix49_En28
  wire [98:0] adder_add_cast_84;  // ufix99_En56
  wire [98:0] adder_add_cast_85;  // ufix99_En56
  wire [98:0] adder_add_temp_42;  // ufix99_En56
  wire [97:0] squaresum17;  // ufix98_En56
  wire [97:0] rootdtc17;  // ufix98_En56
  wire [97:0] shift217;  // ufix98_En56
  wire [98:0] adder_add_cast_86;  // ufix99_En56
  wire [98:0] adder_add_cast_87;  // ufix99_En56
  wire [98:0] adder_add_temp_43;  // ufix99_En56
  wire [97:0] roottmp_sq16;  // ufix98_En56
  wire relop_relop1_22;
  wire [97:0] root_sq16;  // ufix98_En56
  wire [97:0] base15sqr;  // ufix98_En56
  wire [48:0] roottmp16;  // ufix49_En28
  wire [48:0] root16;  // ufix49_En28
  wire [98:0] adder_add_cast_88;  // ufix99_En56
  wire [98:0] adder_add_cast_89;  // ufix99_En56
  wire [98:0] adder_add_temp_44;  // ufix99_En56
  wire [97:0] squaresum16;  // ufix98_En56
  wire [97:0] rootdtc16;  // ufix98_En56
  wire [97:0] shift216;  // ufix98_En56
  wire [98:0] adder_add_cast_90;  // ufix99_En56
  wire [98:0] adder_add_cast_91;  // ufix99_En56
  wire [98:0] adder_add_temp_45;  // ufix99_En56
  wire [97:0] roottmp_sq15;  // ufix98_En56
  wire relop_relop1_23;
  wire [97:0] root_sq15;  // ufix98_En56
  wire [97:0] base14sqr;  // ufix98_En56
  wire [48:0] roottmp15;  // ufix49_En28
  wire [48:0] root15;  // ufix49_En28
  wire [98:0] adder_add_cast_92;  // ufix99_En56
  wire [98:0] adder_add_cast_93;  // ufix99_En56
  wire [98:0] adder_add_temp_46;  // ufix99_En56
  wire [97:0] squaresum15;  // ufix98_En56
  wire [97:0] rootdtc15;  // ufix98_En56
  wire [97:0] shift215;  // ufix98_En56
  wire [98:0] adder_add_cast_94;  // ufix99_En56
  wire [98:0] adder_add_cast_95;  // ufix99_En56
  wire [98:0] adder_add_temp_47;  // ufix99_En56
  wire [97:0] roottmp_sq14;  // ufix98_En56
  wire relop_relop1_24;
  wire [97:0] root_sq14;  // ufix98_En56
  wire [97:0] base13sqr;  // ufix98_En56
  wire [48:0] roottmp14;  // ufix49_En28
  wire [48:0] root14;  // ufix49_En28
  wire [98:0] adder_add_cast_96;  // ufix99_En56
  wire [98:0] adder_add_cast_97;  // ufix99_En56
  wire [98:0] adder_add_temp_48;  // ufix99_En56
  wire [97:0] squaresum14;  // ufix98_En56
  wire [97:0] rootdtc14;  // ufix98_En56
  wire [97:0] shift214;  // ufix98_En56
  wire [98:0] adder_add_cast_98;  // ufix99_En56
  wire [98:0] adder_add_cast_99;  // ufix99_En56
  wire [98:0] adder_add_temp_49;  // ufix99_En56
  wire [97:0] roottmp_sq13;  // ufix98_En56
  wire relop_relop1_25;
  wire [97:0] root_sq13;  // ufix98_En56
  wire [97:0] base12sqr;  // ufix98_En56
  wire [48:0] roottmp13;  // ufix49_En28
  wire [48:0] root13;  // ufix49_En28
  wire [98:0] adder_add_cast_100;  // ufix99_En56
  wire [98:0] adder_add_cast_101;  // ufix99_En56
  wire [98:0] adder_add_temp_50;  // ufix99_En56
  wire [97:0] squaresum13;  // ufix98_En56
  wire [97:0] rootdtc13;  // ufix98_En56
  wire [97:0] shift213;  // ufix98_En56
  wire [98:0] adder_add_cast_102;  // ufix99_En56
  wire [98:0] adder_add_cast_103;  // ufix99_En56
  wire [98:0] adder_add_temp_51;  // ufix99_En56
  wire [97:0] roottmp_sq12;  // ufix98_En56
  wire relop_relop1_26;
  wire [97:0] root_sq12;  // ufix98_En56
  wire [97:0] base11sqr;  // ufix98_En56
  wire [48:0] roottmp12;  // ufix49_En28
  wire [48:0] root12;  // ufix49_En28
  wire [98:0] adder_add_cast_104;  // ufix99_En56
  wire [98:0] adder_add_cast_105;  // ufix99_En56
  wire [98:0] adder_add_temp_52;  // ufix99_En56
  wire [97:0] squaresum12;  // ufix98_En56
  wire [97:0] rootdtc12;  // ufix98_En56
  wire [97:0] shift212;  // ufix98_En56
  wire [98:0] adder_add_cast_106;  // ufix99_En56
  wire [98:0] adder_add_cast_107;  // ufix99_En56
  wire [98:0] adder_add_temp_53;  // ufix99_En56
  wire [97:0] roottmp_sq11;  // ufix98_En56
  wire relop_relop1_27;
  wire [97:0] root_sq11;  // ufix98_En56
  wire [97:0] base10sqr;  // ufix98_En56
  wire [48:0] roottmp11;  // ufix49_En28
  wire [48:0] root11;  // ufix49_En28
  wire [98:0] adder_add_cast_108;  // ufix99_En56
  wire [98:0] adder_add_cast_109;  // ufix99_En56
  wire [98:0] adder_add_temp_54;  // ufix99_En56
  wire [97:0] squaresum11;  // ufix98_En56
  wire [97:0] rootdtc11;  // ufix98_En56
  wire [97:0] shift211;  // ufix98_En56
  wire [98:0] adder_add_cast_110;  // ufix99_En56
  wire [98:0] adder_add_cast_111;  // ufix99_En56
  wire [98:0] adder_add_temp_55;  // ufix99_En56
  wire [97:0] roottmp_sq10;  // ufix98_En56
  wire relop_relop1_28;
  wire [97:0] root_sq10;  // ufix98_En56
  wire [97:0] base9sqr;  // ufix98_En56
  wire [48:0] roottmp10;  // ufix49_En28
  wire [48:0] root10;  // ufix49_En28
  wire [98:0] adder_add_cast_112;  // ufix99_En56
  wire [98:0] adder_add_cast_113;  // ufix99_En56
  wire [98:0] adder_add_temp_56;  // ufix99_En56
  wire [97:0] squaresum10;  // ufix98_En56
  wire [97:0] rootdtc10;  // ufix98_En56
  wire [97:0] shift210;  // ufix98_En56
  wire [98:0] adder_add_cast_114;  // ufix99_En56
  wire [98:0] adder_add_cast_115;  // ufix99_En56
  wire [98:0] adder_add_temp_57;  // ufix99_En56
  wire [97:0] roottmp_sq9;  // ufix98_En56
  wire relop_relop1_29;
  wire [97:0] root_sq9;  // ufix98_En56
  wire [97:0] base8sqr;  // ufix98_En56
  wire [48:0] roottmp9;  // ufix49_En28
  wire [48:0] root9;  // ufix49_En28
  wire [98:0] adder_add_cast_116;  // ufix99_En56
  wire [98:0] adder_add_cast_117;  // ufix99_En56
  wire [98:0] adder_add_temp_58;  // ufix99_En56
  wire [97:0] squaresum9;  // ufix98_En56
  wire [97:0] rootdtc9;  // ufix98_En56
  wire [97:0] shift29;  // ufix98_En56
  wire [98:0] adder_add_cast_118;  // ufix99_En56
  wire [98:0] adder_add_cast_119;  // ufix99_En56
  wire [98:0] adder_add_temp_59;  // ufix99_En56
  wire [97:0] roottmp_sq8;  // ufix98_En56
  wire relop_relop1_30;
  wire [97:0] root_sq8;  // ufix98_En56
  wire [97:0] base7sqr;  // ufix98_En56
  wire [48:0] roottmp8;  // ufix49_En28
  wire [48:0] root8;  // ufix49_En28
  wire [98:0] adder_add_cast_120;  // ufix99_En56
  wire [98:0] adder_add_cast_121;  // ufix99_En56
  wire [98:0] adder_add_temp_60;  // ufix99_En56
  wire [97:0] squaresum8;  // ufix98_En56
  wire [97:0] rootdtc8;  // ufix98_En56
  wire [97:0] shift28;  // ufix98_En56
  wire [98:0] adder_add_cast_122;  // ufix99_En56
  wire [98:0] adder_add_cast_123;  // ufix99_En56
  wire [98:0] adder_add_temp_61;  // ufix99_En56
  wire [97:0] roottmp_sq7;  // ufix98_En56
  wire relop_relop1_31;
  wire [97:0] root_sq7;  // ufix98_En56
  wire [97:0] base6sqr;  // ufix98_En56
  wire [48:0] roottmp7;  // ufix49_En28
  wire [48:0] root7;  // ufix49_En28
  wire [98:0] adder_add_cast_124;  // ufix99_En56
  wire [98:0] adder_add_cast_125;  // ufix99_En56
  wire [98:0] adder_add_temp_62;  // ufix99_En56
  wire [97:0] squaresum7;  // ufix98_En56
  wire [97:0] rootdtc7;  // ufix98_En56
  wire [97:0] shift27;  // ufix98_En56
  wire [98:0] adder_add_cast_126;  // ufix99_En56
  wire [98:0] adder_add_cast_127;  // ufix99_En56
  wire [98:0] adder_add_temp_63;  // ufix99_En56
  wire [97:0] roottmp_sq6;  // ufix98_En56
  wire relop_relop1_32;
  wire [97:0] root_sq6;  // ufix98_En56
  wire [97:0] base5sqr;  // ufix98_En56
  wire [48:0] roottmp6;  // ufix49_En28
  wire [48:0] root6;  // ufix49_En28
  wire [98:0] adder_add_cast_128;  // ufix99_En56
  wire [98:0] adder_add_cast_129;  // ufix99_En56
  wire [98:0] adder_add_temp_64;  // ufix99_En56
  wire [97:0] squaresum6;  // ufix98_En56
  wire [97:0] rootdtc6;  // ufix98_En56
  wire [97:0] shift26;  // ufix98_En56
  wire [98:0] adder_add_cast_130;  // ufix99_En56
  wire [98:0] adder_add_cast_131;  // ufix99_En56
  wire [98:0] adder_add_temp_65;  // ufix99_En56
  wire [97:0] roottmp_sq5;  // ufix98_En56
  wire relop_relop1_33;
  wire [97:0] root_sq5;  // ufix98_En56
  wire [97:0] base4sqr;  // ufix98_En56
  wire [48:0] roottmp5;  // ufix49_En28
  wire [48:0] root5;  // ufix49_En28
  wire [98:0] adder_add_cast_132;  // ufix99_En56
  wire [98:0] adder_add_cast_133;  // ufix99_En56
  wire [98:0] adder_add_temp_66;  // ufix99_En56
  wire [97:0] squaresum5;  // ufix98_En56
  wire [97:0] rootdtc5;  // ufix98_En56
  wire [97:0] shift25;  // ufix98_En56
  wire [98:0] adder_add_cast_134;  // ufix99_En56
  wire [98:0] adder_add_cast_135;  // ufix99_En56
  wire [98:0] adder_add_temp_67;  // ufix99_En56
  wire [97:0] roottmp_sq4;  // ufix98_En56
  wire relop_relop1_34;
  wire [97:0] root_sq4;  // ufix98_En56
  wire [97:0] base3sqr;  // ufix98_En56
  wire [48:0] roottmp4;  // ufix49_En28
  wire [48:0] root4;  // ufix49_En28
  wire [98:0] adder_add_cast_136;  // ufix99_En56
  wire [98:0] adder_add_cast_137;  // ufix99_En56
  wire [98:0] adder_add_temp_68;  // ufix99_En56
  wire [97:0] squaresum4;  // ufix98_En56
  wire [97:0] rootdtc4;  // ufix98_En56
  wire [97:0] shift24;  // ufix98_En56
  wire [98:0] adder_add_cast_138;  // ufix99_En56
  wire [98:0] adder_add_cast_139;  // ufix99_En56
  wire [98:0] adder_add_temp_69;  // ufix99_En56
  wire [97:0] roottmp_sq3;  // ufix98_En56
  wire relop_relop1_35;
  wire [97:0] root_sq3;  // ufix98_En56
  wire [97:0] base2sqr;  // ufix98_En56
  wire [48:0] roottmp3;  // ufix49_En28
  wire [48:0] root3;  // ufix49_En28
  wire [98:0] adder_add_cast_140;  // ufix99_En56
  wire [98:0] adder_add_cast_141;  // ufix99_En56
  wire [98:0] adder_add_temp_70;  // ufix99_En56
  wire [97:0] squaresum3;  // ufix98_En56
  wire [97:0] rootdtc3;  // ufix98_En56
  wire [97:0] shift23;  // ufix98_En56
  wire [98:0] adder_add_cast_142;  // ufix99_En56
  wire [98:0] adder_add_cast_143;  // ufix99_En56
  wire [98:0] adder_add_temp_71;  // ufix99_En56
  wire [97:0] roottmp_sq2;  // ufix98_En56
  wire relop_relop1_36;
  wire [97:0] root_sq2;  // ufix98_En56
  wire [97:0] base1sqr;  // ufix98_En56
  wire [48:0] roottmp2;  // ufix49_En28
  wire [48:0] root2;  // ufix49_En28
  wire [98:0] adder_add_cast_144;  // ufix99_En56
  wire [98:0] adder_add_cast_145;  // ufix99_En56
  wire [98:0] adder_add_temp_72;  // ufix99_En56
  wire [97:0] squaresum2;  // ufix98_En56
  wire [97:0] rootdtc2;  // ufix98_En56
  wire [97:0] shift22;  // ufix98_En56
  wire [98:0] adder_add_cast_146;  // ufix99_En56
  wire [98:0] adder_add_cast_147;  // ufix99_En56
  wire [98:0] adder_add_temp_73;  // ufix99_En56
  wire [97:0] roottmp_sq1;  // ufix98_En56
  wire relop_relop1_37;
  wire [97:0] root_sq1;  // ufix98_En56
  wire [48:0] roottmp1;  // ufix49_En28
  wire [48:0] root1;  // ufix49_En28
  wire [97:0] base0sqr;  // ufix98_En56
  wire [98:0] adder_add_cast_148;  // ufix99_En56
  wire [98:0] adder_add_cast_149;  // ufix99_En56
  wire [98:0] adder_add_temp_74;  // ufix99_En56
  wire [97:0] squaresum1;  // ufix98_En56
  wire [97:0] rootdtc1;  // ufix98_En56
  wire [97:0] shift21;  // ufix98_En56
  wire [98:0] adder_add_cast_150;  // ufix99_En56
  wire [98:0] adder_add_cast_151;  // ufix99_En56
  wire [98:0] adder_add_temp_75;  // ufix99_En56
  wire [97:0] roottmp_sq0;  // ufix98_En56
  wire relop_relop1_38;
  wire [48:0] roottmp0;  // ufix49_En28
  wire [48:0] root0;  // ufix49_En28

  // Sqrt Implementation using Shift


  assign base38sqr = 98'h0000010000000000000000000;



  assign resizedin = {21'b0, {din, 28'b0000000000000000000000000000}};



  assign relop_relop1 = base38sqr <= resizedin;



  assign rootsqini = 98'h0000000000000000000000000;



  assign root_sq38 = (relop_relop1 == 1'b0 ? rootsqini :
              base38sqr);



  assign base37sqr = 98'h0000004000000000000000000;



  assign rootini = 49'h0000000000000;



  assign MSBy = 49'h0004000000000;



  assign root38 = (relop_relop1 == 1'b0 ? rootini :
              MSBy);



  assign adder_add_cast = {1'b0, root_sq38};
  assign adder_add_cast_1 = {1'b0, base37sqr};
  assign adder_add_temp = adder_add_cast + adder_add_cast_1;
  assign squaresum38 = (adder_add_temp[98] != 1'b0 ? 98'h3FFFFFFFFFFFFFFFFFFFFFFFF :
              adder_add_temp[97:0]);



  assign rootdtc38 = {21'b0, {root38, 28'b0000000000000000000000000000}};



  assign shift238 = rootdtc38 <<< 8'd10;



  assign adder_add_cast_2 = {1'b0, squaresum38};
  assign adder_add_cast_3 = {1'b0, shift238};
  assign adder_add_temp_1 = adder_add_cast_2 + adder_add_cast_3;
  assign roottmp_sq37 = (adder_add_temp_1[98] != 1'b0 ? 98'h3FFFFFFFFFFFFFFFFFFFFFFFF :
              adder_add_temp_1[97:0]);



  assign relop_relop1_1 = roottmp_sq37 <= resizedin;



  assign root_sq37 = (relop_relop1_1 == 1'b0 ? root_sq38 :
              roottmp_sq37);



  assign base36sqr = 98'h0000001000000000000000000;



  assign roottmp37 = root38 | 49'h0002000000000;



  assign root37 = (relop_relop1_1 == 1'b0 ? root38 :
              roottmp37);



  assign adder_add_cast_4 = {1'b0, root_sq37};
  assign adder_add_cast_5 = {1'b0, base36sqr};
  assign adder_add_temp_2 = adder_add_cast_4 + adder_add_cast_5;
  assign squaresum37 = (adder_add_temp_2[98] != 1'b0 ? 98'h3FFFFFFFFFFFFFFFFFFFFFFFF :
              adder_add_temp_2[97:0]);



  assign rootdtc37 = {21'b0, {root37, 28'b0000000000000000000000000000}};



  assign shift237 = rootdtc37 <<< 8'd9;



  assign adder_add_cast_6 = {1'b0, squaresum37};
  assign adder_add_cast_7 = {1'b0, shift237};
  assign adder_add_temp_3 = adder_add_cast_6 + adder_add_cast_7;
  assign roottmp_sq36 = (adder_add_temp_3[98] != 1'b0 ? 98'h3FFFFFFFFFFFFFFFFFFFFFFFF :
              adder_add_temp_3[97:0]);



  assign relop_relop1_2 = roottmp_sq36 <= resizedin;



  assign root_sq36 = (relop_relop1_2 == 1'b0 ? root_sq37 :
              roottmp_sq36);



  assign base35sqr = 98'h0000000400000000000000000;



  assign roottmp36 = root37 | 49'h0001000000000;



  assign root36 = (relop_relop1_2 == 1'b0 ? root37 :
              roottmp36);



  assign adder_add_cast_8 = {1'b0, root_sq36};
  assign adder_add_cast_9 = {1'b0, base35sqr};
  assign adder_add_temp_4 = adder_add_cast_8 + adder_add_cast_9;
  assign squaresum36 = (adder_add_temp_4[98] != 1'b0 ? 98'h3FFFFFFFFFFFFFFFFFFFFFFFF :
              adder_add_temp_4[97:0]);



  assign rootdtc36 = {21'b0, {root36, 28'b0000000000000000000000000000}};



  assign shift236 = rootdtc36 <<< 8'd8;



  assign adder_add_cast_10 = {1'b0, squaresum36};
  assign adder_add_cast_11 = {1'b0, shift236};
  assign adder_add_temp_5 = adder_add_cast_10 + adder_add_cast_11;
  assign roottmp_sq35 = (adder_add_temp_5[98] != 1'b0 ? 98'h3FFFFFFFFFFFFFFFFFFFFFFFF :
              adder_add_temp_5[97:0]);



  assign relop_relop1_3 = roottmp_sq35 <= resizedin;



  assign root_sq35 = (relop_relop1_3 == 1'b0 ? root_sq36 :
              roottmp_sq35);



  assign base34sqr = 98'h0000000100000000000000000;



  assign roottmp35 = root36 | 49'h0000800000000;



  assign root35 = (relop_relop1_3 == 1'b0 ? root36 :
              roottmp35);



  assign adder_add_cast_12 = {1'b0, root_sq35};
  assign adder_add_cast_13 = {1'b0, base34sqr};
  assign adder_add_temp_6 = adder_add_cast_12 + adder_add_cast_13;
  assign squaresum35 = (adder_add_temp_6[98] != 1'b0 ? 98'h3FFFFFFFFFFFFFFFFFFFFFFFF :
              adder_add_temp_6[97:0]);



  assign rootdtc35 = {21'b0, {root35, 28'b0000000000000000000000000000}};



  assign shift235 = rootdtc35 <<< 8'd7;



  assign adder_add_cast_14 = {1'b0, squaresum35};
  assign adder_add_cast_15 = {1'b0, shift235};
  assign adder_add_temp_7 = adder_add_cast_14 + adder_add_cast_15;
  assign roottmp_sq34 = (adder_add_temp_7[98] != 1'b0 ? 98'h3FFFFFFFFFFFFFFFFFFFFFFFF :
              adder_add_temp_7[97:0]);



  assign relop_relop1_4 = roottmp_sq34 <= resizedin;



  assign root_sq34 = (relop_relop1_4 == 1'b0 ? root_sq35 :
              roottmp_sq34);



  assign base33sqr = 98'h0000000040000000000000000;



  assign roottmp34 = root35 | 49'h0000400000000;



  assign root34 = (relop_relop1_4 == 1'b0 ? root35 :
              roottmp34);



  assign adder_add_cast_16 = {1'b0, root_sq34};
  assign adder_add_cast_17 = {1'b0, base33sqr};
  assign adder_add_temp_8 = adder_add_cast_16 + adder_add_cast_17;
  assign squaresum34 = (adder_add_temp_8[98] != 1'b0 ? 98'h3FFFFFFFFFFFFFFFFFFFFFFFF :
              adder_add_temp_8[97:0]);



  assign rootdtc34 = {21'b0, {root34, 28'b0000000000000000000000000000}};



  assign shift234 = rootdtc34 <<< 8'd6;



  assign adder_add_cast_18 = {1'b0, squaresum34};
  assign adder_add_cast_19 = {1'b0, shift234};
  assign adder_add_temp_9 = adder_add_cast_18 + adder_add_cast_19;
  assign roottmp_sq33 = (adder_add_temp_9[98] != 1'b0 ? 98'h3FFFFFFFFFFFFFFFFFFFFFFFF :
              adder_add_temp_9[97:0]);



  assign relop_relop1_5 = roottmp_sq33 <= resizedin;



  assign root_sq33 = (relop_relop1_5 == 1'b0 ? root_sq34 :
              roottmp_sq33);



  assign base32sqr = 98'h0000000010000000000000000;



  assign roottmp33 = root34 | 49'h0000200000000;



  assign root33 = (relop_relop1_5 == 1'b0 ? root34 :
              roottmp33);



  assign adder_add_cast_20 = {1'b0, root_sq33};
  assign adder_add_cast_21 = {1'b0, base32sqr};
  assign adder_add_temp_10 = adder_add_cast_20 + adder_add_cast_21;
  assign squaresum33 = (adder_add_temp_10[98] != 1'b0 ? 98'h3FFFFFFFFFFFFFFFFFFFFFFFF :
              adder_add_temp_10[97:0]);



  assign rootdtc33 = {21'b0, {root33, 28'b0000000000000000000000000000}};



  assign shift233 = rootdtc33 <<< 8'd5;



  assign adder_add_cast_22 = {1'b0, squaresum33};
  assign adder_add_cast_23 = {1'b0, shift233};
  assign adder_add_temp_11 = adder_add_cast_22 + adder_add_cast_23;
  assign roottmp_sq32 = (adder_add_temp_11[98] != 1'b0 ? 98'h3FFFFFFFFFFFFFFFFFFFFFFFF :
              adder_add_temp_11[97:0]);



  assign relop_relop1_6 = roottmp_sq32 <= resizedin;



  assign root_sq32 = (relop_relop1_6 == 1'b0 ? root_sq33 :
              roottmp_sq32);



  assign base31sqr = 98'h0000000004000000000000000;



  assign roottmp32 = root33 | 49'h0000100000000;



  assign root32 = (relop_relop1_6 == 1'b0 ? root33 :
              roottmp32);



  assign adder_add_cast_24 = {1'b0, root_sq32};
  assign adder_add_cast_25 = {1'b0, base31sqr};
  assign adder_add_temp_12 = adder_add_cast_24 + adder_add_cast_25;
  assign squaresum32 = (adder_add_temp_12[98] != 1'b0 ? 98'h3FFFFFFFFFFFFFFFFFFFFFFFF :
              adder_add_temp_12[97:0]);



  assign rootdtc32 = {21'b0, {root32, 28'b0000000000000000000000000000}};



  assign shift232 = rootdtc32 <<< 8'd4;



  assign adder_add_cast_26 = {1'b0, squaresum32};
  assign adder_add_cast_27 = {1'b0, shift232};
  assign adder_add_temp_13 = adder_add_cast_26 + adder_add_cast_27;
  assign roottmp_sq31 = (adder_add_temp_13[98] != 1'b0 ? 98'h3FFFFFFFFFFFFFFFFFFFFFFFF :
              adder_add_temp_13[97:0]);



  assign relop_relop1_7 = roottmp_sq31 <= resizedin;



  assign root_sq31 = (relop_relop1_7 == 1'b0 ? root_sq32 :
              roottmp_sq31);



  assign base30sqr = 98'h0000000001000000000000000;



  assign roottmp31 = root32 | 49'h0000080000000;



  assign root31 = (relop_relop1_7 == 1'b0 ? root32 :
              roottmp31);



  assign adder_add_cast_28 = {1'b0, root_sq31};
  assign adder_add_cast_29 = {1'b0, base30sqr};
  assign adder_add_temp_14 = adder_add_cast_28 + adder_add_cast_29;
  assign squaresum31 = (adder_add_temp_14[98] != 1'b0 ? 98'h3FFFFFFFFFFFFFFFFFFFFFFFF :
              adder_add_temp_14[97:0]);



  assign rootdtc31 = {21'b0, {root31, 28'b0000000000000000000000000000}};



  assign shift231 = rootdtc31 <<< 8'd3;



  assign adder_add_cast_30 = {1'b0, squaresum31};
  assign adder_add_cast_31 = {1'b0, shift231};
  assign adder_add_temp_15 = adder_add_cast_30 + adder_add_cast_31;
  assign roottmp_sq30 = (adder_add_temp_15[98] != 1'b0 ? 98'h3FFFFFFFFFFFFFFFFFFFFFFFF :
              adder_add_temp_15[97:0]);



  assign relop_relop1_8 = roottmp_sq30 <= resizedin;



  assign root_sq30 = (relop_relop1_8 == 1'b0 ? root_sq31 :
              roottmp_sq30);



  assign base29sqr = 98'h0000000000400000000000000;



  assign roottmp30 = root31 | 49'h0000040000000;



  assign root30 = (relop_relop1_8 == 1'b0 ? root31 :
              roottmp30);



  assign adder_add_cast_32 = {1'b0, root_sq30};
  assign adder_add_cast_33 = {1'b0, base29sqr};
  assign adder_add_temp_16 = adder_add_cast_32 + adder_add_cast_33;
  assign squaresum30 = (adder_add_temp_16[98] != 1'b0 ? 98'h3FFFFFFFFFFFFFFFFFFFFFFFF :
              adder_add_temp_16[97:0]);



  assign rootdtc30 = {21'b0, {root30, 28'b0000000000000000000000000000}};



  assign shift230 = rootdtc30 <<< 8'd2;



  assign adder_add_cast_34 = {1'b0, squaresum30};
  assign adder_add_cast_35 = {1'b0, shift230};
  assign adder_add_temp_17 = adder_add_cast_34 + adder_add_cast_35;
  assign roottmp_sq29 = (adder_add_temp_17[98] != 1'b0 ? 98'h3FFFFFFFFFFFFFFFFFFFFFFFF :
              adder_add_temp_17[97:0]);



  assign relop_relop1_9 = roottmp_sq29 <= resizedin;



  assign root_sq29 = (relop_relop1_9 == 1'b0 ? root_sq30 :
              roottmp_sq29);



  assign base28sqr = 98'h0000000000100000000000000;



  assign roottmp29 = root30 | 49'h0000020000000;



  assign root29 = (relop_relop1_9 == 1'b0 ? root30 :
              roottmp29);



  assign adder_add_cast_36 = {1'b0, root_sq29};
  assign adder_add_cast_37 = {1'b0, base28sqr};
  assign adder_add_temp_18 = adder_add_cast_36 + adder_add_cast_37;
  assign squaresum29 = (adder_add_temp_18[98] != 1'b0 ? 98'h3FFFFFFFFFFFFFFFFFFFFFFFF :
              adder_add_temp_18[97:0]);



  assign rootdtc29 = {21'b0, {root29, 28'b0000000000000000000000000000}};



  assign shift229 = rootdtc29 <<< 8'd1;



  assign adder_add_cast_38 = {1'b0, squaresum29};
  assign adder_add_cast_39 = {1'b0, shift229};
  assign adder_add_temp_19 = adder_add_cast_38 + adder_add_cast_39;
  assign roottmp_sq28 = (adder_add_temp_19[98] != 1'b0 ? 98'h3FFFFFFFFFFFFFFFFFFFFFFFF :
              adder_add_temp_19[97:0]);



  assign relop_relop1_10 = roottmp_sq28 <= resizedin;



  assign root_sq28 = (relop_relop1_10 == 1'b0 ? root_sq29 :
              roottmp_sq28);



  assign base27sqr = 98'h0000000000040000000000000;



  assign roottmp28 = root29 | 49'h0000010000000;



  assign root28 = (relop_relop1_10 == 1'b0 ? root29 :
              roottmp28);



  



  assign dout = root28;

endmodule  // Sqrt
